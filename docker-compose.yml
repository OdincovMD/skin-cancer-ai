services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
    networks:
      - app-network
    develop:
      watch:
        - action: sync+restart
          path: ./nginx/nginx.conf
          target: /etc/nginx/nginx.conf

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    networks:
      - app-network
    expose:
      - "3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app

#  ml:
#    build:
#      context: ./ml
#      dockerfile: Dockerfile
#    ports:
#    - "8000:8000"
#    networks:
#    - app-network
#    develop:
#      watch:
#        - action: sync+restart
#          path: ./ml
#          target: /app

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - app-network
#    volumes:
#      - minio_data:/app/uploads
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /app

  postgres:
    build:
      context: ./db
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /app

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: MINIO_ROOT_PASSWORD
      MINIO_SERVER_URL: "http://0.0.0.0:9000"
    ports:
      - "1111:9000"
      - "1112:9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
