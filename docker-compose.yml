services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST}
    ports:
      - "90:90"  # Правильное пробрасывание порта
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/var/www/html
    networks:
      - app-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
      - BACKEND_URL=${BACKEND_URL}
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    networks:
      - app-network
    expose:
      - "3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
  ml:
   build:
     context: ./ml
     dockerfile: Dockerfile
   expose:
   - "8000"
   networks:
   - app-network
   volumes:
   - ./ml/weight:/app/weight
   - ./log:/app/log

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
    - "9000"
    networks:
      - app-network
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "7178:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  minio:
    image: minio/minio
    container_name: minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_SERVER_URL: "http://0.0.0.0:9000"
    expose:
      - "9000"
    ports:
      - "1112:9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data: